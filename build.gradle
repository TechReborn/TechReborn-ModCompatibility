buildscript {
	repositories {
		mavenCentral()
		jcenter()
		maven {
			name = "forge"
			url = "http://files.minecraftforge.net/maven"
		}
		maven {
			name = "sonatype"
			url = "https://oss.sonatype.org/content/repositories/snapshots/"
		}
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
		classpath "gradle.plugin.net.minecrell:licenser:0.2.1"
	}
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: net.minecrell.gradle.licenser.Licenser
apply plugin: 'idea'

idea {
	module {
		// if you hate browsing Javadoc
		downloadJavadoc = true

		// and love reading sources :)
		downloadSources = true
	}
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	jcenter()
	maven {
		name = "Modmuss50"
		url = "https://maven.modmuss50.me/"
	}
	maven {
		// JEI
		name "JEI"
		url "https://dvs1.progwml6.com/files/maven"
	}
	maven {
		// MC MultiPart
		name = "Amadornes"
		url "http://maven.amadornes.com/"
	}
	maven {
		// CraftTweaker2, ImmersiveEngineering
		name "Jared"
		url "http://maven.blamejared.com/"
	}
	maven {
		// TheOneProbe
		url "http://maven.tterrag.com/"
	}
	 maven {
	 	// IC2
	 	name = "ic2"
	 	url = "http://maven.ic2.player.to/"
	 }
	maven {
		// HWYLA
		name "TehNut"
		url "http://tehnut.info/maven/"
	}
	maven {
		name 'CB Repo'
		url "http://chickenbones.net/maven/"
	}
	maven {
		// CoFH
		name 'Covers'
		url "http://maven.covers1624.net/"
	}
	maven {
		name "OpenComputer"
		url "http://maven.cil.li/"
	}
	
	maven {
		// Forgelin
        url "http://maven.shadowfacts.net/"
    }

	maven {
		// Mekanism, Baubles, Industrial Foregoing, Tesla, AE2
		name "CurseForge"
		url "https://minecraft.curseforge.com/api/maven/"
	}
	ivy {
		name "BuildCraft"
		artifactPattern "https://www.mod-buildcraft.com/releases/BuildCraft/[revision]/[module]-[revision].[ext]"
	}
	// refined storage
	maven {
		name "Raoulvdberge"
		url  "https://repo.raoulvdberge.com/"
	}
}

version = "1.3.2"

def ENV = System.getenv()
if (ENV.BUILD_NUMBER) {
	version = version + "." + "${System.getenv().BUILD_NUMBER}"
}

minecraft {
	version = "1.12.2-14.23.5.2847"
	mappings = "stable_39"
	replace "@MODVERSION@", project.version
	useDepAts = true
	runDir = "run"
}

license {
	header file('HEADER')
	include '**/*.java'
	ignoreFailures = true //Stops the build from failing if a file does not have a license header
}

group = 'TechReborn-ModCompatibility'

dependencies {
	deobfCompile("RebornCore:RebornCore-1.12.2:+:universal") {
		transitive = false
	}
	
	deobfCompile("TechReborn:TechReborn-1.12.2:+:universal") {
		transitive = false
	}

	deobfCompile ("refinedstorage:refinedstorage:1.6.15-+") {
		transitive = false
	}

	deobfCompile ("CraftTweaker2:CraftTweaker2-MC1120-Main:1.12-4.0.12.323") {
		transitive = true
	}

	deobfCompile ("baubles:Baubles:1.12:1.5.2") {
		transitive = false
	}

	deobfCompile ("net.industrial-craft:industrialcraft-2:2.8.+") {
		transitive = false
	}

	deobfCompile ("tesla-core-lib:tesla-core-lib:1.12.2:1.0.15") {
		transitive = false
	}

	deobfCompile ("mcp.mobius.waila:Hwyla:1.8+") {
		transitive = false
	}

	deobfCompile ("li.cil.oc:OpenComputers:MC1.12.2-1.7.2+") {
		transitive = false
	}

	deobfCompile ("net.sengir.forestry:forestry_1.12.2:+") {
		transitive = false
	}

	deobfCompile ("industrial-foregoing:industrialforegoing-1.12.2:1.12.3:227") {
		transitive = false
	}

	deobfCompile ("railcraft:railcraft:release") {
		transitive = false
	}

	deobfCompile ("blusunrize:ImmersiveEngineering:0.12-+") {
		transitive = false
	}

	deobfCompile ("cofh:CoFHCore:1.12.2-+:universal") {
		transitive = false
	}

	deobfCompile ("cofh:RedstoneFlux:1.12-2.1+:universal") {
		transitive = false
	}

	deobfCompile ("cofh:CoFHWorld:1.12.2-+:universal") {
		transitive = false
	}

	deobfCompile ("cofh:ThermalFoundation:1.12.2-+:universal") {
		transitive = false
	}

	deobfCompile ("cofh:ThermalExpansion:1.12.2-+:universal") {
		transitive = false
	}

	deobfCompile ("appeng:appliedenergistics2:rv6-stable-6") {
		transitive = false
	}

	deobfCompile "mezz.jei:jei_1.12.2:+"
	deobfCompile name: 'buildcraft-main', version: '7.99.20', ext: 'jar'
	deobfCompile "mcjty.theoneprobe:TheOneProbe-1.12:1.12-1.4.+"
	deobfProvided "codechicken:CodeChickenLib:1.12.2-+:universal"

//	deobfCompile 'MCMultiPart2:MCMultiPart:2.4.1'

//	deobfCompile "mekanism:Mekanism:1.12.2:9.4.13.349"
//	deobfCompile "mekanism-generators:MekanismGenerators:1.12.2:9.4.13.349"
//	deobfCompile "mekanism-tools:MekanismTools:1.12.2:9.4.13.349"
//	deobfCompile "mekanism-tools:MekanismTools:1.12.2:9.4.13.349"

	runtime "net.shadowfacts:Forgelin:1.8.2" //Needed by tesla-core-lib :D
//	runtime "appeng:appliedenergistics2:rv6-stable-6:api" // Needed by Mekanism
}

jar {
	classifier = 'universal'
}

publishing {
	publications {
		maven(MavenPublication) {
			groupId 'TechReborn'
			artifactId project.archivesBaseName
			version project.version

			from components.java

			//Removes all of the dependencies from the maven pom, fixes issues when other projects try to depend on tr
			pom.withXml {
				asNode().remove(asNode().get('dependencies'))
			}
		}
	}
	repositories {
		maven {
			url "http://mavenupload.modmuss50.me/"
			if (project.hasProperty('mavenPass')) {
				credentials {
					username 'buildslave'
					password project.getProperty('mavenPass')
				}
			}
		}
	}
}

apply from: 'https://github.com/FabricMC/fabric-docs/raw/master/gradle/ideconfig.gradle'

task signJar(type: SignJar, dependsOn: reobfJar) {
	onlyIf {
		project.hasProperty('keyStore')
	}

	if (project.hasProperty('keyStore')) {
		keyStore = project.keyStore
		alias = project.keyStoreAlias
		storePass = project.keyStorePass
		keyPass = project.keyStoreKeyPass
		inputFile = jar.archivePath
		outputFile = jar.archivePath
	}

}

build.dependsOn signJar
